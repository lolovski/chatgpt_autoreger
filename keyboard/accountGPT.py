# keyboard/accountGPT.py

from typing import List
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from callbacks import *
from db.models import AccountGPT

ACCOUNTS_PER_PAGE = 5

def gpt_menu_keyboard(accounts: List[AccountGPT], page: int, total_pages: int):
    buttons = [
        [InlineKeyboardButton(text='‚ûï –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç', callback_data=AccountGPTCallback(action='create').pack())]
    ]

    # –°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    for account in accounts:
        buttons.append([
            InlineKeyboardButton(text=f'üë§ {account.name}', callback_data=AccountGPTCallback(action='account', params=account.id).pack())
        ])

    # –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    if total_pages > 1:
        paginator_buttons = []
        if page > 1:
            paginator_buttons.append(
                InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=NavigationCallback(menu='gpt_page', params=page - 1).pack())
            )
        if page < total_pages:
            paginator_buttons.append(
                InlineKeyboardButton(text='–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è', callback_data=NavigationCallback(menu='gpt_page', params=page + 1).pack())
            )
        buttons.append(paginator_buttons)

    buttons.append([InlineKeyboardButton(text='‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data=NavigationCallback(menu='main').pack())])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def choice_create_gpt_account_keyboard():
    buttons = [
        [InlineKeyboardButton(text='‚öôÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ', callback_data=AccountGPTCallback(action='auto_create').pack())],
        [InlineKeyboardButton(text='‚úçÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é', callback_data=AccountGPTCallback(action='manual_create').pack())],
        [InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=NavigationCallback(menu='chatGPT').pack())]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def gpt_account_keyboard(account: AccountGPT):
    buttons = [
        [InlineKeyboardButton(text='üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å', callback_data=AccountGPTCallback(action='launch', params=account.id).pack())],
        [
            InlineKeyboardButton(text='‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å', callback_data=AccountGPTCallback(action='rename', params=account.id).pack()),
            InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å', callback_data=AccountGPTCallback(action='delete', params=account.id).pack())
        ],
        [InlineKeyboardButton(text='‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É', callback_data=NavigationCallback(menu='chatGPT').pack())]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def confirm_delete_keyboard(account_id: str):
    buttons = [
        [
            InlineKeyboardButton(text='‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å', callback_data=AccountGPTCallback(action='confirm_delete', params=account_id).pack()),
            InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data=AccountGPTCallback(action='account', params=account_id).pack())
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def cancel_fsm_keyboard(menu: str = 'chatGPT'):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM."""
    buttons = [
        [InlineKeyboardButton(text='‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞', callback_data=NavigationCallback(menu=menu).pack())]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)